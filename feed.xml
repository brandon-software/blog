<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://code-sage.com/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://code-sage.com/blog/" rel="alternate" type="text/html" /><updated>2023-07-25T20:40:57+00:00</updated><id>https://code-sage.com/blog/feed.xml</id><title type="html">Code-Sage</title><subtitle>A Software Engineer&apos;s Blog
</subtitle><entry><title type="html">Angular App Enhancement and Dependency Maintenance</title><link href="https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance.html" rel="alternate" type="text/html" title="Angular App Enhancement and Dependency Maintenance" /><published>2023-07-23T00:00:00+00:00</published><updated>2023-07-23T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance.html"><![CDATA[<h2 id="objective">Objective</h2>

<p>Enhance existing angular application to improve productivity and accessibility (keyboard navigation).</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Dependency maintenance and management (update software package versions) for existing Angular project.  Add support for keyboard navigation and accessibility.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Update Angular Project to build, test, and execute using latest Angular 16:
    <ul>
      <li>Update angular dependencies.</li>
      <li>Update application code to function with latest supported Typescript.</li>
      <li>Replace deprecated 3rd party dependencies with supported dependencies.</li>
      <li>Ensure application retains previous form and functionality.</li>
      <li>Update tests to function with latest dependencies.</li>
    </ul>
  </li>
  <li>Support keyboard navigation and accessibility:
    <ul>
      <li>Allow users to quickly and consistently navigate application using keyboard without use of mouse.</li>
      <li>Consider multiple os and browser combinations.</li>
      <li>Ensure the layout remains responsive and mobile-friendly.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate continuous rapid local development and testing.  Code changes trigger local build and test.</li>
      <li>update GitHub Actions build and test with latest dependencies.</li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on successfully navigating and trouble shooting issues (dependency deprecation, typescript) encountered to continue development and long term support of angular application.  Additionally, add support for keyboard navigation and accessibility in the angular application.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="Typescript" /><category term="vscode" /><category term="git" /><category term="Angular" /><category term="github-actions" /><summary type="html"><![CDATA[Objective]]></summary></entry><entry><title type="html">Web Blog Development</title><link href="https://code-sage.com/blog/2023/07/18/Web-Blog-Development.html" rel="alternate" type="text/html" title="Web Blog Development" /><published>2023-07-18T00:00:00+00:00</published><updated>2023-07-18T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/18/Web-Blog-Development</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/18/Web-Blog-Development.html"><![CDATA[<h2 id="objective">Objective</h2>

<p>Enhance web blogging productivity by enabling sharing of daily/weekly work efforts, engaging with the community, and creating an online web portfolio of skills and projects.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Refresh (update software package versions, theme) for existing Jekyll static blog project.  Improve UI design for readability and navigation.  The goal is to create a responsive and fast blog that facilitates publishing blog content efficiently as well as consuming blog content.  Additional considerations: easy theme updates and rapid development and deployment.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Jekyll Project Update:
    <ul>
      <li>Major version updates to Ruby and Jekyll.</li>
      <li>Changed and integrated Jekyll theme using Git modules for easy theme updates.</li>
    </ul>
  </li>
  <li>Theme Customization:
    <ul>
      <li>Adapted post, page layouts and CSS to match UI design objectives.</li>
      <li>Implemented sticky headers.</li>
      <li>Customized menu and links supporting navigation of CSharp Guide.  Developed a custom script to iterate through Markdown files within the defined folder structure.</li>
      <li>Ensured the layout remains responsive and mobile-friendly.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate rapid local development,</li>
      <li>Multiple deployments
        <ul>
          <li>using GitHub Actions to GitHub Pages</li>
          <li>Additional deployment to Apache.</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on updating dependencies the Jekyll project, ensuring rapid local development, and the ability to iteratively deliver a responsive static blog that meets UI and navigation goals.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="markdown" /><category term="yaml" /><category term="vscode" /><category term="git" /><category term="ruby" /><category term="jekyll" /><category term="liquid-templates" /><category term="github-actions" /><category term="github-pages" /><category term="apache" /><summary type="html"><![CDATA[Objective]]></summary></entry><entry><title type="html">Why Angular App Development?</title><link href="https://code-sage.com/blog/angular/2018/08/20/Why-Angular-App-Development.html" rel="alternate" type="text/html" title="Why Angular App Development?" /><published>2018-08-20T20:16:27+00:00</published><updated>2018-08-20T20:16:27+00:00</updated><id>https://code-sage.com/blog/angular/2018/08/20/Why-Angular-App-Development</id><content type="html" xml:base="https://code-sage.com/blog/angular/2018/08/20/Why-Angular-App-Development.html"><![CDATA[<p><img src="/blog/public/image/code-sage-time.jpg" alt="Code Sage" class="center-image" /></p>

<hr />

<p>A primary benefit of angular vs typical web application development is improving the user experience by reducing the number web server interactions and improving the responsiveness of the application.  Generally, the application is loaded once and then the user navigates through the application without the need to refresh the page.  The application is responsive and reacts to user input and page transitions, user interactions, etc are all managed by the angular application running in the browser.</p>

<p>Consider the C# guide I published as a static website using Jekyll.  Each click on a new link typically results in a new page being loaded.  Although, the user experience is fast as a static site, the user experience could be improved by loading the entire guide as a single page application (SPA) and then the user navigates through the application without the need to refresh the page or “hit the server”.</p>

<p>I have created an angular version of the C# guide.  Additionally, I have added a contextual search feature to the angular version of the guide where the only interaction with the server is the initial load.  The angular version of the guide is available at the following link:</p>

<p><a href="https://code-sage.com/angular/">Angular SPA C# Guide</a></p>

<p>Regards,</p>

<p>Brandon Dsouza</p>]]></content><author><name>Brandon DSouza</name></author><category term="Angular" /><category term="html" /><category term="css" /><category term="Typescript" /><category term="vscode" /><category term="git" /><category term="Angular" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">A concise guide to C# Language Features</title><link href="https://code-sage.com/blog/csharp/2017/06/07/A-concise-guide-to-CSharp-Language-Features.html" rel="alternate" type="text/html" title="A concise guide to C# Language Features" /><published>2017-06-07T20:16:27+00:00</published><updated>2017-06-07T20:16:27+00:00</updated><id>https://code-sage.com/blog/csharp/2017/06/07/A-concise-guide-to-CSharp-Language-Features</id><content type="html" xml:base="https://code-sage.com/blog/csharp/2017/06/07/A-concise-guide-to-CSharp-Language-Features.html"><![CDATA[<p><img src="/blog/public/image/code-sage-time.jpg" alt="Code Sage" class="center-image" /></p>

<hr />

<p>My first venture into blogging was a collection of articles on C# language features.  The articles are organized progressively by version release i.e. chronologically and then alphabetically by language feature.</p>

<p>To ease navigation when visiting the guide links to C# articles can be found below each article and in the menu.</p>

<p>My motivation at the time for the C# guide was as follows to create a consistent and organized reference for C# language features not found elsewhere.</p>

<p>How the world has changed since then!  The C# language has evolved and so has the internet.  The internet has become a much richer resource for learning C# language features.</p>

<p>Regards,</p>

<p>Brandon Dsouza</p>

<p>PS Some notes about the code examples within the guide:</p>

<ul>
  <li>Using statements have been omitted for brevity.</li>
  <li>Other than the missing using statements and namespace, all code compiles and executes.</li>
</ul>

<hr />

<div class="quick" style="margin:5%;">
    <h6>C# articles</h6>
    
    
    
    
    
    
    
    
    

    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    

    
    
    
    
    
    

    
    

    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    

    
    

    
    <div style="display:inline;">
        <h3 style="display:inline;">csharp v2 +</h3>
    </div>
    
    

    <a href="/blog/topics/csharp/v2/Anonymous_methods/">Anonymous methods</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Co-_and_Contra-variance_for_delegates/">Co- and Contra-variance for delegates</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Delegate_inference/">Delegate inference</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Generics/">Generics</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Getter_and_setter_separate_accessibility/">Getter and setter separate accessibility</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Iterators/">Iterators</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Method_group_conversions__delegates_/">Method group conversions (delegates)</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Nullable_types/">Nullable types</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Partials/">Partials</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v2/Static_classes/">Static classes</a>
    *
    
    
    
    
    
    

    
    

    
    <div style="display:inline;">
        <h3 style="display:inline;">csharp v3 +</h3>
    </div>
    
    

    <a href="/blog/topics/csharp/v3/Anonymous_types/">Anonymous types</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Auto-Implemented_properties/">Auto-Implemented properties</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Expression_trees/">Expression trees</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Extension_methods/">Extension methods</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Implicitly_typed_local_variables/">Implicitly typed local variables</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Lambda_expression/">Lambda expression</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Object_and_collection_initializers/">Object and collection initializers</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Partial_methods/">Partial methods</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v3/Query_expressions/">Query expressions</a>
    *
    
    
    
    
    
    

    
    

    
    <div style="display:inline;">
        <h3 style="display:inline;">csharp v4 +</h3>
    </div>
    
    

    <a href="/blog/topics/csharp/v4/Generic_co-_and_contravariance/">Generic co- and contravariance</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v4/Named_and_optional_arguments/">Named and optional arguments</a>
    *
    
    
    
    
    
    

    
    

    
    <div style="display:inline;">
        <h3 style="display:inline;">csharp v5 +</h3>
    </div>
    
    

    <a href="/blog/topics/csharp/v5/Asynchronous_methods/">Asynchronous methods</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v5/Caller_info_attributes/">Caller info attributes</a>
    *
    
    
    
    
    
    

    
    

    
    <div style="display:inline;">
        <h3 style="display:inline;">csharp v6 +</h3>
    </div>
    
    

    <a href="/blog/topics/csharp/v6/A_note_for_CSharp_6_and_beyond/">A note for CSharp 6 and beyond</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Allow_await_in_catch_and_finally_blocks/">Allow await in catch and finally blocks</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Auto_property_initializers/">Auto property initializers</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Default_values_for_Read-only_Auto-properties/">Default values for Read-only Auto-properties</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Dictionary__index__initializers/">Dictionary (index) initializers</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Exception_filters/">Exception filters</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Expression-bodied_members/">Expression-bodied members</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Import_of_static_type_members_into_namespace/">Import of static type members into namespace</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/Null_propagator__null-conditional_operator__succinct_null_checking_/">Null propagator (null-conditional operator, succinct null checking)</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/String_interpolation/">String interpolation</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v6/nameof_operator/">nameof operator</a>
    *
    
    
    
    
    
    

    
    

    
    <div style="display:inline;">
        <h3 style="display:inline;">csharp v7 +</h3>
    </div>
    
    

    <a href="/blog/topics/csharp/v7/Binary_literals/">Binary literals</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Deconstruction/">Deconstruction</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Digit_separators/">Digit separators</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Expression_bodied_constructors_and_finalizers/">Expression bodied constructors and finalizers</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Expression_bodied_getters_and_setters/">Expression bodied getters and setters</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Generalized_async_return_types/">Generalized async return types</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Local_functions/">Local functions</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Out_variables/">Out variables</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Pattern_matching/">Pattern matching</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Ref_returns_and_locals/">Ref returns and locals</a>
    *
    
    
    
    
    
    

    
    

    

    <a href="/blog/topics/csharp/v7/Tuples/">Tuples</a>
    *
    
    

    
    
    
</div>]]></content><author><name>Brandon DSouza</name></author><category term="CSharp" /><category term="html" /><category term="css" /><category term="markdown" /><category term="yaml" /><category term="vscode" /><category term="git" /><category term="ruby" /><category term="jekyll" /><category term="liquid-templates" /><category term="github-actions" /><category term="github-pages" /><category term="apache" /><summary type="html"><![CDATA[]]></summary></entry></feed>