<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://code-sage.com/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://code-sage.com/blog/" rel="alternate" type="text/html" /><updated>2023-08-19T18:22:20+00:00</updated><id>https://code-sage.com/blog/feed.xml</id><title type="html">Code-Sage</title><subtitle>A Software Engineer&apos;s Blog
</subtitle><entry><title type="html">Automated Web App Testing with PlayWright</title><link href="https://code-sage.com/blog/2023/08/16/Automated-Web-App-Testing-with-Playwright.html" rel="alternate" type="text/html" title="Automated Web App Testing with PlayWright" /><published>2023-08-16T00:00:00+00:00</published><updated>2023-08-16T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/08/16/Automated-Web-App-Testing-with-Playwright</id><content type="html" xml:base="https://code-sage.com/blog/2023/08/16/Automated-Web-App-Testing-with-Playwright.html"><![CDATA[<p><img src="/blog/public/image/sp-playwright.jpg" alt="Testing" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Reduce manual testing to increase rate of responsiveness to business change request and reduce risk of regression.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Automate web app testing.  Additional considerations: Test iteration development cycles should be minimal, that is, ‘reduce thrashing’ and ‘quick turn around’ by assisted automated code generation.  Testing should support headless testing and be able to run in a CI/CD pipeline.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Add Pytest and PlayWright Packages</li>
    </ul>
  </li>
  <li>Develop Tests
    <ul>
      <li>Identify ‘non-brittle’ test cases and scenarios.</li>
      <li>Identify specific and unique selectors with a consideration of minimizing change.  That is, selectors should be stable and not change with each release.</li>
      <li>Create tests and confirm tests pass and fail as expected.</li>
    </ul>
  </li>
</ol>

<p>Overall, automated testing for a web app reduces development effort.  A substantial advantage can be achieved when you avoid manual testing, brittle tests, and can develop tests quickly. Additionally, we’re making sure these tests can be done without a visible browser and can be run in a pipeline that helps us keep our development process smooth.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pytest" /><category term="playwright" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Soapbox: Why Refactor?</title><link href="https://code-sage.com/blog/2023/08/11/Soapbox-Why-Refactor.html" rel="alternate" type="text/html" title="Soapbox: Why Refactor?" /><published>2023-08-11T00:00:00+00:00</published><updated>2023-08-11T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/08/11/Soapbox-Why-Refactor</id><content type="html" xml:base="https://code-sage.com/blog/2023/08/11/Soapbox-Why-Refactor.html"><![CDATA[<p><img src="/blog/public/image/ad-puzzle-refactor.jpg" alt="Refactor" class="center-image" /></p>

<hr />

<p>While it is important to deliver features and meet deadlines,  it is also important to consider the long term maintainability of the software.  Refactoring is an essential  part of software development process and is a process that should be done continuously.</p>

<p>Refactoring should include the following (elimination of code smells):</p>

<ul>
  <li>Identify and remove the following:
    <ul>
      <li>dead code</li>
      <li>unused variables</li>
      <li>duplicated code</li>
      <li>overly complex code</li>
    </ul>
  </li>
  <li>Improve the following:
 naming of functions and variables
    <ul>
      <li>code structure</li>
      <li>modularity</li>
      <li>potential reuse</li>
    </ul>
  </li>
</ul>

<p>In essence, refactoring is the process of improving the design of existing code without changing its external behavior. Knowledge and proficiency of automated testing, version control, IDE utilization, Clean Code and SOLID principles, CI/CD, etc. are critical to continuously implement refactoring.</p>

<p>A primary benefit of refactoring is a reduction of “technical debt”.   If a project has incorporated the ability to continuously refactor, delivering features faster and with less risk of regression is guaranteed.  A developer does not fear change and can confidently refactor code to improve the design of the software developed as well as enhance their ability to deliver new features faster.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Deployment and Updates with PowerShell (Business Sales Dashboard - Phase 3)</title><link href="https://code-sage.com/blog/2023/08/04/Dash-App-Deployment-with-Powershell.html" rel="alternate" type="text/html" title="Deployment and Updates with PowerShell (Business Sales Dashboard - Phase 3)" /><published>2023-08-04T00:00:00+00:00</published><updated>2023-08-04T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/08/04/Dash-App-Deployment-with-Powershell</id><content type="html" xml:base="https://code-sage.com/blog/2023/08/04/Dash-App-Deployment-with-Powershell.html"><![CDATA[<p><img src="/blog/public/image/deployment.jpeg" alt="Deployment" class="center-image rounded-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Create an interactive dashboard that offers valuable business insights into product sales, manufacturing, and market data to allow for seamless exploration of key metrics, facilitating informed decision-making and enhancing understanding of the sales and manufacturing processes as well as market trends and opportuinites.</p>

<p>Phase 3: Seamless Dashboard Deployment and Updates</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Develop automated method to update dashboard application in windows environment.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Deploy dashboard to client workstation. Create Power Shell Installation Script/Tool for managing dependencies allowing for
    <ul>
      <li>install</li>
      <li>upgrade</li>
      <li>uninstall</li>
      <li>display package versions</li>
      <li>create/remove dashboard app shortcut on desktop</li>
    </ul>
  </li>
  <li>Application Update and Start Script. Create Power Shell Script to
    <ul>
      <li>automate dashboard app updates</li>
      <li>start of flask Python app (dashboard).</li>
    </ul>
  </li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pandas" /><category term="numpy" /><category term="matplotlib" /><category term="seaborn" /><category term="data-science" /><category term="data-analysis" /><category term="data-visualization" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Data Science - Visualization with Python (Business Sales Dashboard - Phase 2)</title><link href="https://code-sage.com/blog/2023/07/31/Data-Science-Visualization-with-Python.html" rel="alternate" type="text/html" title="Data Science - Visualization with Python (Business Sales Dashboard - Phase 2)" /><published>2023-07-31T00:00:00+00:00</published><updated>2023-07-31T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/31/Data-Science-Visualization-with-Python</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/31/Data-Science-Visualization-with-Python.html"><![CDATA[<p><img src="/blog/public/image/data-visualization.jpeg" alt="Data Visualization" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Create an interactive dashboard that offers valuable business insights into product sales, manufacturing, and market data to allow for seamless exploration of key metrics, facilitating informed decision-making and enhancing understanding of the sales and manufacturing processes as well as market trends and opportuinites.</p>

<p>Phase 2: Deliver Usable Interactive Dashboard for Business Data Visualization</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Understand customer needs and develop usable/interactive dashboard with minimal user interface friction.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Jupyter Notebook</li>
      <li>Data Analysis and Visualization Packages</li>
    </ul>
  </li>
  <li>Data Visualization and Dashboard Development
    <ul>
      <li>Understand data and identify key variables/metrics for interactive dashboard.</li>
      <li>Prototype pivot table, charts and graphs for review.</li>
      <li>Identify friction points and opportunities for improvement.</li>
      <li>Create an interactive dashboard to allow for seamless exploration of product, manufacture and market data.
        <ul>
          <li>All Product Manufacturing, Sales, by Market By Period (Daily/Weekly/Quarter/Annually)</li>
          <li>Granular Product Manufacturing, Sales, by Market By Period (Daily/Weekly/Quarter/Annually)</li>
          <li>Sales trends with adjustable timeframe window by product, category, and market (Daily/Weekly/Quarter/Annually).</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pandas" /><category term="numpy" /><category term="matplotlib" /><category term="seaborn" /><category term="scipy" /><category term="jupyter-notebook" /><category term="data-science" /><category term="data-analysis" /><category term="data-visualization" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Angular App Dependency Maintenance</title><link href="https://code-sage.com/blog/2023/07/26/Angular-App-Dependency-Maintenance.html" rel="alternate" type="text/html" title="Angular App Dependency Maintenance" /><published>2023-07-26T00:00:00+00:00</published><updated>2023-07-26T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/26/Angular-App-Dependency-Maintenance</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/26/Angular-App-Dependency-Maintenance.html"><![CDATA[<p><img src="/blog/public/image/angular.jpeg" alt="Angular" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance existing angular application to LTS.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Dependency maintenance and management (update software package versions) for existing Angular project.  Add support for keyboard navigation and accessibility.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Update Angular Project to build, test, and execute using latest Angular 16:
    <ul>
      <li>Update angular dependencies.</li>
      <li>Update application code to function with latest supported Typescript.</li>
      <li>Ensure application retains previous form and functionality.</li>
      <li>Update tests to function with latest dependencies.</li>
      <li>Update stories (Storybook) to latest support version.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate continuous rapid local development and testing.  Code changes trigger local build and test.</li>
      <li>update GitHub Actions build and test with latest dependencies.</li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on successfully navigating and trouble shooting issues (dependency deprecation, typescript) encountered to continue development and long term support of angular application.  Additionally, updated stories for compatibility with latest support.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="Typescript" /><category term="vscode" /><category term="git" /><category term="Angular" /><category term="github-actions" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Angular App Enhancement and Dependency Maintenance</title><link href="https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance.html" rel="alternate" type="text/html" title="Angular App Enhancement and Dependency Maintenance" /><published>2023-07-23T00:00:00+00:00</published><updated>2023-07-23T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance.html"><![CDATA[<p><img src="/blog/public/image/angular2.jpeg" alt="Angular" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance existing angular application to improve productivity and accessibility (keyboard navigation).</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Dependency maintenance and management (update software package versions) for existing Angular project.  Add support for keyboard navigation and accessibility.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Update Angular Project to build, test, and execute using latest Angular 16:
    <ul>
      <li>Update angular dependencies.</li>
      <li>Update application code to function with latest supported Typescript.</li>
      <li>Replace deprecated 3rd party dependencies with supported dependencies.</li>
      <li>Ensure application retains previous form and functionality.</li>
      <li>Update tests to function with latest dependencies.</li>
    </ul>
  </li>
  <li>Support keyboard navigation and accessibility:
    <ul>
      <li>Allow users to quickly and consistently navigate application using keyboard without use of mouse.</li>
      <li>Consider multiple os and browser combinations.</li>
      <li>Ensure the layout remains responsive and mobile-friendly.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate continuous rapid local development and testing.  Code changes trigger local build and test.</li>
      <li>update GitHub Actions build and test with latest dependencies.</li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on successfully navigating and trouble shooting issues (dependency deprecation, typescript) encountered to continue development and long term support of angular application.  Additionally, add support for keyboard navigation and accessibility in the angular application.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="Typescript" /><category term="vscode" /><category term="git" /><category term="Angular" /><category term="github-actions" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Web Blog Development</title><link href="https://code-sage.com/blog/2023/07/18/Web-Blog-Development.html" rel="alternate" type="text/html" title="Web Blog Development" /><published>2023-07-18T00:00:00+00:00</published><updated>2023-07-18T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/18/Web-Blog-Development</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/18/Web-Blog-Development.html"><![CDATA[<p><img src="/blog/public/image/web-blog.jpeg" alt="Web Blog" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance web blogging productivity by enabling sharing of daily/weekly work efforts, engaging with the community, and creating an online web portfolio of skills and projects.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Refresh (update software package versions, theme) for existing Jekyll static blog project.  Improve UI design for readability and navigation.  The goal is to create a responsive and fast blog that facilitates publishing blog content efficiently as well as consuming blog content.  Additional considerations: easy theme updates and rapid development and deployment.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Jekyll Project Update:
    <ul>
      <li>Major version updates to Ruby and Jekyll.</li>
      <li>Changed and integrated Jekyll theme using Git modules for easy theme updates.</li>
    </ul>
  </li>
  <li>Theme Customization:
    <ul>
      <li>Adapted post, page layouts and CSS to match UI design objectives.</li>
      <li>Implemented sticky headers.</li>
      <li>Customized menu and links supporting navigation of CSharp Guide.  Developed a custom script to iterate through Markdown files within the defined folder structure.</li>
      <li>Ensured the layout remains responsive and mobile-friendly.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate rapid local development,</li>
      <li>Multiple deployments
        <ul>
          <li>using GitHub Actions to GitHub Pages</li>
          <li>Additional deployment to Apache.</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on updating dependencies the Jekyll project, ensuring rapid local development, and the ability to iteratively deliver a responsive static blog that meets UI and navigation goals.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="markdown" /><category term="yaml" /><category term="vscode" /><category term="git" /><category term="ruby" /><category term="jekyll" /><category term="liquid-templates" /><category term="github-actions" /><category term="github-pages" /><category term="apache" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Data Science - Analysis/Cleaning with Python (Business Sales Dashboard - Phase 1)</title><link href="https://code-sage.com/blog/2023/07/13/Data-Science-Analysis-with-Python.html" rel="alternate" type="text/html" title="Data Science - Analysis/Cleaning with Python (Business Sales Dashboard - Phase 1)" /><published>2023-07-13T00:00:00+00:00</published><updated>2023-07-13T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/13/Data-Science-Analysis-with-Python</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/13/Data-Science-Analysis-with-Python.html"><![CDATA[<p><img src="/blog/public/image/data-analysis.jpeg" alt="Analysis" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Create an interactive dashboard that offers valuable business insights into product sales, manufacturing, and market data to allow for seamless exploration of key metrics, facilitating informed decision-making and enhancing understanding of the sales and manufacturing processes as well as market trends and opportuinites.</p>

<p>Phase 1: Data Analysis/Cleaning</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Develop iterative data analysis and process to for input into visualization dashboard.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Jupyter Notebook</li>
      <li>Data Analysis and Visualization Packages</li>
    </ul>
  </li>
  <li>Data Analysis
    <ul>
      <li>Explore, understand, and create a dataset from raw data.</li>
      <li>Provide report of missing, duplicate, and invalid data for correction.</li>
      <li>Clean and process data.</li>
    </ul>
  </li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pandas" /><category term="numpy" /><category term="data-science" /><category term="data-analysis" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">(Universal) Data Import Tool</title><link href="https://code-sage.com/blog/2023/03/09/Data-Science-Normalization-with-Python.html" rel="alternate" type="text/html" title="(Universal) Data Import Tool" /><published>2023-03-09T00:00:00+00:00</published><updated>2023-03-09T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/03/09/Data-Science-Normalization-with-Python</id><content type="html" xml:base="https://code-sage.com/blog/2023/03/09/Data-Science-Normalization-with-Python.html"><![CDATA[<p><img src="/blog/public/image/sp-tool-cube.jpg" alt="Tool" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Organize and consolidate data sets from multiple sources for accounting/financial purposes.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Develop import tool.   Tool should be able to import varied data sets based on meta data of each data set.  The meta data will be used to normalize the data sets into a common and consistent format.  The normalized data sets will be consolidated into a single data set for analysis and reporting.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Jupyter Notebook</li>
      <li>Data Analysis Packages</li>
    </ul>
  </li>
  <li>Iterative Data Analysis and Tool development
    <ul>
      <li>Explore, understand nuances of each data source.</li>
      <li>Create meta data describing each data set</li>
      <li>Refine tool and import data set.</li>
    </ul>
  </li>
</ol>

<p>Overall, the import tool is successfully able to import data sets from multiple sources and normalize the data sets into a common format.  Additional formats can be supported  by adding meta data describing the data set.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="csv" /><category term="json" /><category term="yaml" /><category term="data-science" /><category term="data-analysis" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Rapid Application Development with Django REST Starter App</title><link href="https://code-sage.com/blog/2022/08/19/DJango-Starter-App.html" rel="alternate" type="text/html" title="Rapid Application Development with Django REST Starter App" /><published>2022-08-19T00:00:00+00:00</published><updated>2022-08-19T00:00:00+00:00</updated><id>https://code-sage.com/blog/2022/08/19/DJango-Starter-App</id><content type="html" xml:base="https://code-sage.com/blog/2022/08/19/DJango-Starter-App.html"><![CDATA[<p><img src="/blog/public/image/sp-train-city.jpg" alt="Starter" class="center-image rounded-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Source a ready to use reusable back-end REST server app for prototyping, proof of concept, and main line development projects.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Deliver a “minimal” opinionated reusable starter REST repository with the following requirements/consideration:  enterprise capable and scalable REST API server/database, test coverage,  Open API support, JSON Web Token authentication, continuous integration, and continuous deployment.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>
    <p>Research/review potential open source existing repository/solutions and suitability. Several candidate repos were reviewed.  Only one was deemed suitable meeting/exceeding requirements.  <a href="https://github.com/Vivify-Ideas/python-django-drf-boilerplate">Django repo</a></p>
  </li>
  <li>
    <p>Fork and create suitable base branch <a href="https://github.com/brandon-software/python-django-drf-starter/tree/starter">starter</a></p>
  </li>
  <li>
    <p>Develop branch containing a sample todo api interface verify requirements i.e test, open api, JWT support, etc.  <a href="https://github.com/brandon-software/python-django-drf-starter/tree/REST-code-sample">REST sample branch</a></p>
  </li>
</ol>

<p>Overall, the goal is to provide the ability to quickly create either a prototype or a ready-to-use, functioning back-end REST/Web server for applications. This technique can be utilized in a variety of scenarios including similar technology stacks such as ASP.NET Core, NodeJS, Spring, etc.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="django" /><category term="docker" /><category term="rest" /><category term="ci/cd" /><category term="jwt" /><category term="openapi" /><category term="drf" /><category term="drf-yasg" /><category term="djangorestframework-simplejwt" /><category term="owasp" /><summary type="html"><![CDATA[]]></summary></entry></feed>