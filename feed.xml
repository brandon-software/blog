<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://code-sage.com/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://code-sage.com/blog/" rel="alternate" type="text/html" /><updated>2023-11-07T21:53:10+00:00</updated><id>https://code-sage.com/blog/feed.xml</id><title type="html">Code-Sage</title><subtitle>A Software Engineer&apos;s Blog
</subtitle><entry><title type="html">CI/CD of Python Web App with GitHub Actions</title><link href="https://code-sage.com/blog/2023/09/22/CI-CD-of-Python-Web-App-With-GitHub-Actions.html" rel="alternate" type="text/html" title="CI/CD of Python Web App with GitHub Actions" /><published>2023-09-22T00:00:00+00:00</published><updated>2023-09-22T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/09/22/CI-CD-of-Python-Web-App-With-GitHub-Actions</id><content type="html" xml:base="https://code-sage.com/blog/2023/09/22/CI-CD-of-Python-Web-App-With-GitHub-Actions.html"><![CDATA[<p><img src="/blog/public/image/sp-manufacturing-packaging.jpg" alt="GitHub Action" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance web application quality and speed up development iterations.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Automate build, testing, and deployment of Python web application using GitHub Actions.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Create GitHub Actions Workflow to
    <ul>
      <li>trigger job upon check in to branch</li>
      <li>checkout branch</li>
      <li>install python</li>
      <li>install app dependencies (pip)</li>
      <li>install test dependencies (pytest, playwright, browser)</li>
      <li>run tests</li>
      <li>merge to production branch (if tests successful)</li>
    </ul>
  </li>
  <li>Test and verify GitHub Actions Workflow is working as expected</li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="github actions" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/sp-manufacturing-packaging.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/sp-manufacturing-packaging.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Soapbox: The Generative AI Conundrum: How It Shapes Code Quality and Developers’ Trajectories</title><link href="https://code-sage.com/blog/2023/09/04/Soabox-The-Generative-AI-Conundrum.html" rel="alternate" type="text/html" title="Soapbox: The Generative AI Conundrum: How It Shapes Code Quality and Developers’ Trajectories" /><published>2023-09-04T00:00:00+00:00</published><updated>2023-09-04T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/09/04/Soabox-The-Generative-AI-Conundrum</id><content type="html" xml:base="https://code-sage.com/blog/2023/09/04/Soabox-The-Generative-AI-Conundrum.html"><![CDATA[<p><img src="/blog/public/image/sp-generative-ai-human.jpg" alt="AI Conundrum" class="center-image" /></p>

<hr />

<p>In the ever-evolving landscape of software development, Generative Artificial Intelligence (AI) emerges as both a boon and a challenge. As AI increasingly influences code quality and developers’ roles, understanding its dual impact on professionals of varying experience levels becomes pivotal.</p>

<p>Let’s explore how AI can be both a guiding light and a potential pitfall, particularly in the context of developers’ diverse expertise.</p>

<h2 id="the-double-edged-sword-of-ai">The Double-Edged Sword of AI</h2>

<h3 id="positive-impacts">Positive Impacts</h3>

<p>Using AI, I have found projects that used to take months now take weeks, features that took weeks now take days, etc.  I find AI particularly useful for the following tasks:</p>

<ul>
  <li>Enhanced efficiency: AI-driven tools serve as a great primer for developers, helping them write code faster. Feedback is instant, and suggestions are contextually relevant, reducing the time spent on manual research and coding.</li>
  <li>Debugging and testing: AI-powered tools can identify bugs and vulnerabilities, improving code quality and reducing the chances of errors escaping into production.</li>
  <li>Assisted learning: For developers, AI can offer instant feedback, acting as a knowledgeable mentor that guides them through best practices.</li>
</ul>

<p>There is a lot to be said about the efficiency of AI and how it can help us get to the next level of development.  Not just code that works but code that is architected to be efficient, secure, and maintainable.  With our guidance, AI can help us efficiently produce good quality code and reduce technical debt.</p>

<h3 id="potential-hazards-and-pitfalls">Potential hazards and pitfalls</h3>

<p>I find the lack of understanding of underlying principles can result in the same patterns that plague the pre-AI development.  This failure to understand the underlying principles can result in potentially serious bottlenecks.  That is, in using AI with technologies I am not familiar with I have found myself spending more time in frustration trying to “resolve” the issue with AI instead of “thinking through and understanding” and resolving the problem the AI had not “encountered” in its training.  Additionally, we should all be aware of the following AI pitfalls:</p>

<ul>
  <li>Lack of available training data: AI tools require large amounts of training data to function effectively. However, this data may not always be available, particularly for niche use cases or new technologies or versions of software components.</li>
  <li>Dependency concerns: Over reliance on AI tools can lead to a decline in fundamental coding skills, creating a generation of developers heavily reliant on automation.</li>
  <li>Homogenization of code: AI tools may favor certain coding patterns, potentially stifling creativity and diversity in code bases.</li>
  <li>Hallucinations: AI tools may generate code that is syntactically correct but semantically incorrect. This can lead to bugs and vulnerabilities in production code.</li>
</ul>

<p>Overall, AI can provide answers but what is the intent of the questions?  With the help of AI, we can still generate working but inefficient code with costly technical debt.</p>

<p>With our (AI and humans) collective faults, we can certainly block ourselves from growth and allow AI to lead us down the “meandering path of the moment” vs the “strategic path of born of experience”.</p>

<h2 id="harnessing-experience">Harnessing Experience</h2>

<h3 id="experienced-developers">Experienced Developers</h3>

<p>Having traversed the coding landscape, experienced developers can leverage AI for strategic tasks. By identifying where automation enhances efficiency and where personal experience adds value.  Experienced developers will have the ability to readily overcome challenges faced by less experienced developers and AI.</p>

<h3 id="less-experienced-developers">Less Experienced Developers</h3>

<p>For novice developers, AI serves as a guiding beacon. However, it’s crucial they don’t treat AI as a crutch. Instead, they should approach it as an enabler that complements learning. Engaging with AI tools while striving to understand the principles they automate will create a solid foundation for growth.</p>

<h3 id="the-path-to-leveling-up">The Path to “Leveling Up”</h3>

<ul>
  <li>Embrace continuous learning: Both experienced and less experienced developers should prioritize continuous learning. This includes understanding how AI tools work, recognizing their limitations, and enhancing core coding skills.</li>
  <li>Balance automation and manual coding: Rather than entirely outsourcing tasks to AI, developers should strategically choose where automation benefits them and where hands-on coding sharpens their skills.  Developers should always be able to read, write, and understand code.</li>
  <li>Collaborate and seek guidance: Engaging with experienced developers can provide valuable insights. Their guidance helps less experienced developers make informed decisions about AI tool usage.</li>
  <li>Experiment and innovate: Use AI as a launchpad for innovation. Experiment with creative uses of AI-driven suggestions to create high-quality code.</li>
</ul>

<h2 id="conclusion">Conclusion</h2>

<p>The AI surge in the realm of code quality is both transformative and challenging. For developers, whether seasoned or new, it’s an opportunity to tread thoughtfully. By harnessing AI’s strengths and mitigating its potential pitfalls, professionals can ensure a harmonious coexistence between technology and craftsmanship.</p>

<p>It is important to understand AI is a tool to help the developer.  The developer is responsible for many aspects of the code including quality, efficiency, maintainability, security, etc.  AI is a tool to assist the developer with these aspects, not replace the developer.</p>

<p>Will we use this to our advantage or disadvantage?  Discipline in “software engineering” fundamentals is still required.  Are we asking AI to assist us? Or are we asking AI to do the work for us?</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/sp-generative-ai-human.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/sp-generative-ai-human.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Automated Web App Testing with PlayWright</title><link href="https://code-sage.com/blog/2023/08/16/Automated-Web-App-Testing-with-Playwright.html" rel="alternate" type="text/html" title="Automated Web App Testing with PlayWright" /><published>2023-08-16T00:00:00+00:00</published><updated>2023-08-16T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/08/16/Automated-Web-App-Testing-with-Playwright</id><content type="html" xml:base="https://code-sage.com/blog/2023/08/16/Automated-Web-App-Testing-with-Playwright.html"><![CDATA[<p><img src="/blog/public/image/sp-playwright.jpg" alt="Testing" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Reduce manual testing to increase rate of responsiveness to business change request and reduce risk of regression.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Automate web app testing.  Additional considerations: Test iteration development cycles should be minimal, that is, ‘reduce thrashing’ and ‘quick turn around’ by assisted automated code generation.  Testing should support headless testing and be able to run in a CI/CD pipeline.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Add Pytest and PlayWright Packages</li>
    </ul>
  </li>
  <li>Develop Tests
    <ul>
      <li>Identify ‘non-brittle’ test cases and scenarios.</li>
      <li>Identify specific and unique selectors with a consideration of minimizing change.  That is, selectors should be stable and not change with each release.</li>
      <li>Create tests and confirm tests pass and fail as expected.</li>
    </ul>
  </li>
</ol>

<p>Overall, automated testing for a web app reduces development effort.  A substantial advantage can be achieved when you avoid manual testing, brittle tests, and can develop tests quickly. Additionally, we’re making sure these tests can be done without a visible browser and can be run in a pipeline that helps us keep our development process smooth.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pytest" /><category term="playwright" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Soapbox: Why Refactor?</title><link href="https://code-sage.com/blog/2023/08/11/Soapbox-Why-Refactor.html" rel="alternate" type="text/html" title="Soapbox: Why Refactor?" /><published>2023-08-11T00:00:00+00:00</published><updated>2023-08-11T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/08/11/Soapbox-Why-Refactor</id><content type="html" xml:base="https://code-sage.com/blog/2023/08/11/Soapbox-Why-Refactor.html"><![CDATA[<p><img src="/blog/public/image/ad-puzzle-refactor.jpg" alt="Refactor" class="center-image" /></p>

<hr />

<p>While it is important to deliver features and meet deadlines,  it is also important to consider the long term maintainability of the software.  Refactoring is an essential  part of software development process and is a process that should be done continuously.</p>

<p>Refactoring should include the following tasks (i.e elimination of code smells):</p>

<ul>
  <li>Identify and remove the following:
    <ul>
      <li>dead code</li>
      <li>unused variables</li>
      <li>duplicated code</li>
      <li>overly complex code</li>
    </ul>
  </li>
  <li>Communicating with project maintainers (including your future self!) and other developers through improving the following:
    <ul>
      <li>naming of functions and variables</li>
      <li>code structure</li>
      <li>modularity</li>
      <li>potential reuse</li>
    </ul>
  </li>
</ul>

<p>In essence, refactoring is the process of improving the design of existing code without changing its external behavior. Knowledge and proficiency of automated testing, version control, IDE utilization, Clean Code and SOLID principles, CI/CD, etc. are critical to continuously implement refactoring.</p>

<p>A primary benefit of refactoring is a reduction of “technical debt”.   If a project has incorporated the ability to continuously refactor, delivering features faster and with less risk of regression is guaranteed.  A developer does not fear change and can confidently refactor code to improve the design of the software developed as well as enhance their ability to deliver new features faster.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Deployment and Updates with PowerShell (Business Sales Dashboard - Phase 3)</title><link href="https://code-sage.com/blog/2023/08/04/Dash-App-Deployment-with-Powershell.html" rel="alternate" type="text/html" title="Deployment and Updates with PowerShell (Business Sales Dashboard - Phase 3)" /><published>2023-08-04T00:00:00+00:00</published><updated>2023-08-04T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/08/04/Dash-App-Deployment-with-Powershell</id><content type="html" xml:base="https://code-sage.com/blog/2023/08/04/Dash-App-Deployment-with-Powershell.html"><![CDATA[<p><img src="/blog/public/image/deployment.jpeg" alt="Deployment" class="center-image rounded-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Create an interactive dashboard that offers valuable business insights into product sales, manufacturing, and market data to allow for seamless exploration of key metrics, facilitating informed decision-making and enhancing understanding of the sales and manufacturing processes as well as market trends and opportunities.</p>

<p>Phase 3: Seamless Dashboard Deployment and Updates</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Develop automated method to update dashboard application in windows environment.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Deploy dashboard to client workstation. Create Power Shell Installation Script/Tool for managing dependencies allowing for
    <ul>
      <li>install</li>
      <li>upgrade</li>
      <li>uninstall</li>
      <li>display package versions</li>
      <li>create/remove dashboard app shortcut on desktop</li>
    </ul>
  </li>
  <li>Application Update and Start Script. Create Power Shell Script to
    <ul>
      <li>automate dashboard app updates</li>
      <li>start of flask Python app (dashboard).</li>
    </ul>
  </li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pandas" /><category term="numpy" /><category term="matplotlib" /><category term="seaborn" /><category term="data-science" /><category term="data-analysis" /><category term="data-visualization" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Data Science - Visualization with Python (Business Sales Dashboard - Phase 2)</title><link href="https://code-sage.com/blog/2023/07/31/Data-Science-Visualization-with-Python.html" rel="alternate" type="text/html" title="Data Science - Visualization with Python (Business Sales Dashboard - Phase 2)" /><published>2023-07-31T00:00:00+00:00</published><updated>2023-07-31T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/31/Data-Science-Visualization-with-Python</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/31/Data-Science-Visualization-with-Python.html"><![CDATA[<p><img src="/blog/public/image/data-visualization.jpeg" alt="Data Visualization" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Create an interactive dashboard that offers valuable business insights into product sales, manufacturing, and market data to allow for seamless exploration of key metrics, facilitating informed decision-making and enhancing understanding of the sales and manufacturing processes as well as market trends and opportunities.</p>

<p>Phase 2: Deliver Usable Interactive Dashboard for Business Data Visualization</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Understand customer needs and develop usable/interactive dashboard with minimal user interface friction.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Jupyter Notebook</li>
      <li>Data Analysis and Visualization Packages</li>
    </ul>
  </li>
  <li>Data Visualization and Dashboard Development
    <ul>
      <li>Understand data and identify key variables/metrics for interactive dashboard.</li>
      <li>Prototype pivot table, charts and graphs for review.</li>
      <li>Identify friction points and opportunities for improvement.</li>
      <li>Create an interactive dashboard to allow for seamless exploration of product, manufacture and market data.
        <ul>
          <li>All Product Manufacturing, Sales, by Market By Period (Daily/Weekly/Quarter/Annually)</li>
          <li>Granular Product Manufacturing, Sales, by Market By Period (Daily/Weekly/Quarter/Annually)</li>
          <li>Sales trends with adjustable time frame window by product, category, and market (Daily/Weekly/Quarter/Annually).</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pandas" /><category term="numpy" /><category term="matplotlib" /><category term="seaborn" /><category term="scipy" /><category term="jupyter-notebook" /><category term="data-science" /><category term="data-analysis" /><category term="data-visualization" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Angular App Dependency Maintenance</title><link href="https://code-sage.com/blog/2023/07/26/Angular-App-Dependency-Maintenance.html" rel="alternate" type="text/html" title="Angular App Dependency Maintenance" /><published>2023-07-26T00:00:00+00:00</published><updated>2023-07-26T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/26/Angular-App-Dependency-Maintenance</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/26/Angular-App-Dependency-Maintenance.html"><![CDATA[<p><img src="/blog/public/image/angular.jpeg" alt="Angular" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance existing angular application to LTS.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Dependency maintenance and management (update software package versions) for existing Angular project.  Add support for keyboard navigation and accessibility.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Update Angular Project to build, test, and execute using latest Angular 16:
    <ul>
      <li>Update angular dependencies.</li>
      <li>Update application code to function with latest supported Typescript.</li>
      <li>Ensure application retains previous form and functionality.</li>
      <li>Update tests to function with latest dependencies.</li>
      <li>Update stories (Storybook) to latest support version.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate continuous rapid local development and testing.  Code changes trigger local build and test.</li>
      <li>update GitHub Actions build and test with latest dependencies.</li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on successfully navigating and trouble shooting issues (dependency deprecation, typescript) encountered to continue development and long term support of angular application.  Additionally, updated stories for compatibility with latest support.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="Typescript" /><category term="vscode" /><category term="git" /><category term="Angular" /><category term="github-actions" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Angular App Enhancement and Dependency Maintenance</title><link href="https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance.html" rel="alternate" type="text/html" title="Angular App Enhancement and Dependency Maintenance" /><published>2023-07-23T00:00:00+00:00</published><updated>2023-07-23T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/23/Angular-App-Enhancement-and-Dependency-Maintenance.html"><![CDATA[<p><img src="/blog/public/image/angular2.jpeg" alt="Angular" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance existing angular application to improve productivity and accessibility (keyboard navigation).</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Dependency maintenance and management (update software package versions) for existing Angular project.  Add support for keyboard navigation and accessibility.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Update Angular Project to build, test, and execute using latest Angular 16:
    <ul>
      <li>Update angular dependencies.</li>
      <li>Update application code to function with latest supported Typescript.</li>
      <li>Replace deprecated 3rd party dependencies with supported dependencies.</li>
      <li>Ensure application retains previous form and functionality.</li>
      <li>Update tests to function with latest dependencies.</li>
    </ul>
  </li>
  <li>Support keyboard navigation and accessibility:
    <ul>
      <li>Allow users to quickly and consistently navigate application using keyboard without use of mouse.</li>
      <li>Consider multiple os and browser combinations.</li>
      <li>Ensure the layout remains responsive and mobile-friendly.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate continuous rapid local development and testing.  Code changes trigger local build and test.</li>
      <li>update GitHub Actions build and test with latest dependencies.</li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on successfully navigating and trouble shooting issues (dependency deprecation, typescript) encountered to continue development and long term support of angular application.  Additionally, add support for keyboard navigation and accessibility in the angular application.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="Typescript" /><category term="vscode" /><category term="git" /><category term="Angular" /><category term="github-actions" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Web Blog Development</title><link href="https://code-sage.com/blog/2023/07/18/Web-Blog-Development.html" rel="alternate" type="text/html" title="Web Blog Development" /><published>2023-07-18T00:00:00+00:00</published><updated>2023-07-18T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/18/Web-Blog-Development</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/18/Web-Blog-Development.html"><![CDATA[<p><img src="/blog/public/image/web-blog.jpeg" alt="Web Blog" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance web blogging productivity by enabling sharing of daily/weekly work efforts, engaging with the community, and creating an online web portfolio of skills and projects.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Refresh (update software package versions, theme) for existing Jekyll static blog project.  Improve UI design for readability and navigation.  The goal is to create a responsive and fast blog that facilitates publishing blog content efficiently as well as consuming blog content.  Additional considerations: easy theme updates and rapid development and deployment.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Jekyll Project Update:
    <ul>
      <li>Major version updates to Ruby and Jekyll.</li>
      <li>Changed and integrated Jekyll theme using Git modules for easy theme updates.</li>
    </ul>
  </li>
  <li>Theme Customization:
    <ul>
      <li>Adapted post, page layouts and CSS to match UI design objectives.</li>
      <li>Implemented sticky headers.</li>
      <li>Customized menu and links supporting navigation of CSharp Guide.  Developed a custom script to iterate through Markdown files within the defined folder structure.</li>
      <li>Ensured the layout remains responsive and mobile-friendly.</li>
    </ul>
  </li>
  <li>CI/CD Process Pipeline:
    <ul>
      <li>Facilitate rapid local development,</li>
      <li>Multiple deployments
        <ul>
          <li>using GitHub Actions to GitHub Pages</li>
          <li>Additional deployment to Apache.</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on updating dependencies the Jekyll project, ensuring rapid local development, and the ability to iteratively deliver a responsive static blog that meets UI and navigation goals.</p>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="html" /><category term="css" /><category term="markdown" /><category term="yaml" /><category term="vscode" /><category term="git" /><category term="ruby" /><category term="jekyll" /><category term="liquid-templates" /><category term="github-actions" /><category term="github-pages" /><category term="apache" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Data Science - Analysis/Cleaning with Python (Business Sales Dashboard - Phase 1)</title><link href="https://code-sage.com/blog/2023/07/13/Data-Science-Analysis-with-Python.html" rel="alternate" type="text/html" title="Data Science - Analysis/Cleaning with Python (Business Sales Dashboard - Phase 1)" /><published>2023-07-13T00:00:00+00:00</published><updated>2023-07-13T00:00:00+00:00</updated><id>https://code-sage.com/blog/2023/07/13/Data-Science-Analysis-with-Python</id><content type="html" xml:base="https://code-sage.com/blog/2023/07/13/Data-Science-Analysis-with-Python.html"><![CDATA[<p><img src="/blog/public/image/data-analysis.jpeg" alt="Analysis" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Create an interactive dashboard that offers valuable business insights into product sales, manufacturing, and market data to allow for seamless exploration of key metrics, facilitating informed decision-making and enhancing understanding of the sales and manufacturing processes as well as market trends and opportunities.</p>

<p>Phase 1: Data Analysis/Cleaning</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Develop iterative data analysis and process to for input into visualization dashboard.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Jupyter Notebook</li>
      <li>Data Analysis and Visualization Packages</li>
    </ul>
  </li>
  <li>Data Analysis
    <ul>
      <li>Explore, understand, and create a dataset from raw data.</li>
      <li>Provide report of missing, duplicate, and invalid data for correction.</li>
      <li>Clean and process data.</li>
    </ul>
  </li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pandas" /><category term="numpy" /><category term="data-science" /><category term="data-analysis" /><summary type="html"><![CDATA[]]></summary></entry></feed>