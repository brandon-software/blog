<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://code-sage.com/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://code-sage.com/blog/" rel="alternate" type="text/html" /><updated>2025-04-06T23:13:24+00:00</updated><id>https://code-sage.com/blog/feed.xml</id><title type="html">Code-Sage</title><subtitle>A Software Engineer&apos;s Blog
</subtitle><entry><title type="html">Legacy PHP Application Modernization</title><link href="https://code-sage.com/blog/application-modernization/2025/03/30/PHP-App-Modernization.html" rel="alternate" type="text/html" title="Legacy PHP Application Modernization" /><published>2025-03-30T12:16:27+00:00</published><updated>2025-03-30T12:16:27+00:00</updated><id>https://code-sage.com/blog/application-modernization/2025/03/30/PHP-App-Modernization</id><content type="html" xml:base="https://code-sage.com/blog/application-modernization/2025/03/30/PHP-App-Modernization.html"><![CDATA[<p><img src="/blog/public/image/php_app_modern_1.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="business-objective">Business Objective</h2>

<p>Modernize legacy PHP Application for maintainability and new feature enhancements.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<h2 id="technical-considerations">Technical Considerations</h2>

<p>Retain git history. No functional changes to the application.  Update to use modern PHP practices and standards PSR-4.</p>

<p>1) Update project to use composer for dependency management and autoloader.</p>

<p>2) Moderize folder structure, file name, and class name conventions.</p>

<p>3) Improve clean code</p>
<ul>
  <li>refactor code</li>
  <li>use/prefer class objects over global functions</li>
  <li>update to use of namespaces</li>
</ul>

<p>4) Ensure application works “as is” after changes.</p>

<p>Overall, the technical implementation focused on successfully navigating and trouble shooting issues (auto loading, global, class references and runtime errors) encountered to continue development and long term support of PHP web application.  A key factor was the existing testing framework and test cases that were already in place.  This allowed for a more efficient and effective approach to the modernization process.  The testing framework was used to validate the changes made to the code base, ensuring that the application continued to function as expected after the desired modernization process was complete successful.</p>]]></content><author><name>Brandon DSouza</name></author><category term="Application-Modernization" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/php_app_modern_1.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/php_app_modern_1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Live React Portfolio Sample App - E-Shop Notifications</title><link href="https://code-sage.com/blog/devops/2025/01/10/Portfollio-React-App.html" rel="alternate" type="text/html" title="Live React Portfolio Sample App - E-Shop Notifications" /><published>2025-01-10T12:16:27+00:00</published><updated>2025-01-10T12:16:27+00:00</updated><id>https://code-sage.com/blog/devops/2025/01/10/Portfollio-React-App</id><content type="html" xml:base="https://code-sage.com/blog/devops/2025/01/10/Portfollio-React-App.html"><![CDATA[<p><img src="/blog/public/image/wa-3d-react.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="portfolio-app-notes">Portfolio App Notes</h2>

<h3 id="objective">Objective</h3>
<p>To demonstrate my React App development skills,  I have exposed a fully functional front end React App (with out a backend).  This portfolio sample features a simple intuitive, and easy to use mobile first User Interface.</p>

<h3 id="application-title">Application Title:</h3>
<p>Store Notices</p>

<h3 id="application-overview">Application Overview:</h3>
<p>The React App is a front end component designed to allow users (E-Shop managers) to maintain a data (store notifications) and meta data used for customer communications.  The data will be consumed/shared by a backend web component to display store notifications/banners e-commerce shop.</p>

<h3 id="application-features">Application Features:</h3>

<ul>
  <li>Mobile first, responsive design, mouse, touch, and keyboard accessible.</li>
  <li>Filter and display store notices</li>
  <li>Create, read, update delete, and copy store notices (CRUD and copy) and meta data, begin and end dates, enabled, etc.</li>
  <li>Keep changes in local storage to minimize potential loss of data by api errors/failures</li>
  <li>Notices are always sorted by begin date as follows, current active notice, future notices and past notices.</li>
</ul>

<h3 id="how-is-the-react-app-different-from-the-production-version">How is the React App different from the production version?</h3>
<p>The production version of the React App would have a backend API to store and retrieve the data.  Additionally, the production version of the app would is embedded as component of a web app that provides user authentication, authorization, role-based access control, e-store functionality, etc.  Also, a backend component would be used to actually display the store notices in e-commerce shop.</p>

<h2 id="how-to-use-the-portfolio-sample-react-app">How to use the Portfolio Sample React App?</h2>
<p>Simply visit the url <a href="/blog/store-notice-app/" target="_blank">Live React Portfolio Sample App - E-Shop Notifications</a> and interact with the UI to filter, view, edit, and save changes to the default store notification and list of scheduled notifications.  Important Note: If saving fails, changes are saved in local storage and can be retried.  That is, the user is allowed to work offline and retry saving changes when the server is available.</p>

<h2 id="how-to-reset-portfolio-sample-react-app">How to “reset” Portfolio Sample React App?</h2>
<p>To reset the React App to the “sample data”, simply refresh the page via the browser button.  If the page shows “Saving to server failed. Local changes still available.”,  Click the “X Refresh” (cancel) button to abort the changes you have made.   This action will restore the original sample data.</p>

<h2 id="are-there-missing-desired-features">Are there missing desired features?</h2>
<p>Yes, of course (as projects are never done) the app can be enhanced with basic features such as: prevent overlapping time frames for notifications, improved default start and end dates, for new notifications, etc.  However, these enhancements will need to be prioritized according to the value being delivered to the business.</p>

<h2 id="final-thoughts">Final Thoughts</h2>
<p>I hope you enjoyed interacting with the React App and found it helpful.  If you have any questions or feedback, please feel free to reach out to me.  I am always looking to improve my skills and learn from others.  Thank you for your time and consideration.</p>]]></content><author><name>Brandon DSouza</name></author><category term="DevOps" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/wa-3d-react.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/wa-3d-react.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Add Year-over-year Reporting Feature with Python (Business Sales Dashboard - App Enhancement &amp;amp; Maintenance)</title><link href="https://code-sage.com/blog/2024/11/09/Dashboard-App-Enhancement-and-Dependency-Update-with-Python.html" rel="alternate" type="text/html" title="Add Year-over-year Reporting Feature with Python (Business Sales Dashboard - App Enhancement &amp;amp; Maintenance)" /><published>2024-11-09T00:00:00+00:00</published><updated>2024-11-09T00:00:00+00:00</updated><id>https://code-sage.com/blog/2024/11/09/Dashboard-App-Enhancement-and-Dependency-Update-with-Python</id><content type="html" xml:base="https://code-sage.com/blog/2024/11/09/Dashboard-App-Enhancement-and-Dependency-Update-with-Python.html"><![CDATA[<p><img src="/blog/public/image/data-visualization-update.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Add 2 new features to the interactive dashboard.  1) Ability to visualize year-over-year insights of product sales, category sales, manufacturing, and market data.  2) Allow the ability to download the raw dataset for further analysis.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Create the desired dataset/pivot table and corresponding visualization for the year-over-year insights.  Add a download button to the dashboard to allow users to download the raw dataset.  Also, dependency updates and code refactoring to improve maintainability.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Project Setup
    <ul>
      <li>Python Environment</li>
      <li>Jupyter Notebook</li>
      <li>Data Analysis and Visualization Packages</li>
    </ul>
  </li>
  <li>Application Update
    <ul>
      <li>Update dashboard dependencies to latest compatible/ available.</li>
      <li>Explore, understand, and create a year-over-year dataset from raw data.</li>
      <li>Update the dashboard UI to include the new visualization.</li>
      <li>Add a download button to the dashboard to allow users to download the raw dataset.</li>
      <li>Update tests to include new features.</li>
      <li>Update CI/CD pipeline matrix to test against Python 3.12 and 3.11.</li>
    </ul>
  </li>
</ol>

<hr />]]></content><author><name>Brandon DSouza</name></author><category term="vscode" /><category term="git" /><category term="python" /><category term="pandas" /><category term="numpy" /><category term="matplotlib" /><category term="seaborn" /><category term="data-science" /><category term="data-analysis" /><category term="data-visualization" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/data-visualization-update.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/data-visualization-update.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Automated Testing for BASH scripts with BATS</title><link href="https://code-sage.com/blog/devops/2024/10/26/Automated-Testing-for-BASH-with-BATS.html" rel="alternate" type="text/html" title="Automated Testing for BASH scripts with BATS" /><published>2024-10-26T12:16:27+00:00</published><updated>2024-10-26T12:16:27+00:00</updated><id>https://code-sage.com/blog/devops/2024/10/26/Automated-Testing-for-BASH-with-BATS</id><content type="html" xml:base="https://code-sage.com/blog/devops/2024/10/26/Automated-Testing-for-BASH-with-BATS.html"><![CDATA[<p><img src="/blog/public/image/gears_skyline.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Implement automated testing for production utility scripts to ensure reliability and functionality of the scripts.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Select and implement a testing framework for BASH scripts to automate the testing process and validate the functionality of the scripts.  Create and implement test cases for BASH scripts.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>BATS (Bash Automated Testing System) was selected as the testing framework for BASH scripts due to its simplicity and ease of use.</li>
  <li>Install BATS and understand process.</li>
  <li>Refactor scripts to facilitate testability.</li>
  <li>Test cases were created to validate the functionality of the BASH scripts.</li>
  <li>The test results were reviewed to identify any issues or failures in the scripts.</li>
</ol>

<p>Overall, the implementation of automated testing for BASH scripts using BATS significantly improved the reliability and maintainability of the scripts. The process involved selecting an appropriate testing framework, refactoring the scripts for better testability, creating comprehensive test cases, and reviewing the test results to ensure the scripts functioned as expected. This approach has streamlined the development workflow and enhanced the overall quality of the scripts.</p>]]></content><author><name>Brandon DSouza</name></author><category term="DevOps" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/gears_skyline.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/gears_skyline.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Log file Monitoring and Alerting Utility - Improving Web App Observability</title><link href="https://code-sage.com/blog/devops/2024/08/23/Web-App-Monitoring-Utility.html" rel="alternate" type="text/html" title="Log file Monitoring and Alerting Utility - Improving Web App Observability" /><published>2024-08-23T12:16:27+00:00</published><updated>2024-08-23T12:16:27+00:00</updated><id>https://code-sage.com/blog/devops/2024/08/23/Web-App-Monitoring-Utility</id><content type="html" xml:base="https://code-sage.com/blog/devops/2024/08/23/Web-App-Monitoring-Utility.html"><![CDATA[<p><img src="/blog/public/image/sp-monitor.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Proactively monitor web app.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Develop a log file scanning utility to scan and alert according to specified criteria.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Log file utility should allow specifying .
    <ul>
      <li>last modified date of log file to scan</li>
      <li>Log file path/folder</li>
      <li>Log file name prefix</li>
      <li>Line search/matching criteria</li>
    </ul>
  </li>
  <li>“Log Scan” email is sent once a day (or specified) only if search criteria matches.</li>
</ol>

<p>Overall, the technical implementation was centered around identifying how the log file scanning utility could be used to proactively monitor the web app. The utility was designed to scan multiple log files produced by different system components for specific criteria and send alerts. This allowed for the early detection of potential issues and improved response time to any problems that may arise. The utility was configured to run at specified intervals and send alerts only when concerning logs entries are found, reducing the amount of unnecessary notifications and ensuring that the team was informed of any critical issues in a timely manner.</p>]]></content><author><name>Brandon DSouza</name></author><category term="DevOps" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/sp-monitor.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/sp-monitor.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">NET Core Web API Development</title><link href="https://code-sage.com/blog/devops/2024/06/29/NET-Core-Web-API-Development.html" rel="alternate" type="text/html" title="NET Core Web API Development" /><published>2024-06-29T12:16:27+00:00</published><updated>2024-06-29T12:16:27+00:00</updated><id>https://code-sage.com/blog/devops/2024/06/29/NET-Core-Web-API-Development</id><content type="html" xml:base="https://code-sage.com/blog/devops/2024/06/29/NET-Core-Web-API-Development.html"><![CDATA[<p><img src="/blog/public/image/ad-puzzle1.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Enhance the existing .NET Core Web API reduce technical debt and add requested features.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Identify and implement the necessary changes to the existing .NET Core Web API to improve and automate the build and test processes during development.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Automate the build and test processes:
    <ul>
      <li>Add missing controller and end-to-end tests.</li>
      <li>Facilitate automation of build and test processes to ensure code quality and reliability.</li>
    </ul>
  </li>
  <li>Refactor the existing .NET Core Web API:
    <ul>
      <li>Review web api for OWASP vulnerabilities and implement fixes.</li>
      <li>Identify and remove any unnecessary code.</li>
      <li>Add logging and error handling to improve the reliability and maintainability of the code.</li>
      <li>Review code structure and organization and update for consistency.</li>
    </ul>
  </li>
  <li>Implement requested features with consistent implementation, testing, security review, etc. minimizing technical debt.</li>
</ol>

<p>Overall, the technical implementation focused on enhancing the existing .NET Core Web API by automating the build and test processes, refactoring the codebase, and implementing additional features. The changes aimed to improve the code quality, reliability, and security of the web api. The implementation was successful in reducing technical debt and enhancing the overall performance and functionality of the .NET Core Web API.</p>]]></content><author><name>Brandon DSouza</name></author><category term="DevOps" /><category term="REST API" /><category term="CSharp" /><category term="NET Core" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/ad-puzzle1.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/ad-puzzle1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">React App Development</title><link href="https://code-sage.com/blog/devops/2024/05/25/React-App.html" rel="alternate" type="text/html" title="React App Development" /><published>2024-05-25T12:16:27+00:00</published><updated>2024-05-25T12:16:27+00:00</updated><id>https://code-sage.com/blog/devops/2024/05/25/React-App</id><content type="html" xml:base="https://code-sage.com/blog/devops/2024/05/25/React-App.html"><![CDATA[<p><img src="/blog/public/image/wa-3d-react_2.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Develop a front end app/UI to allow user interaction with a specific data set used for maintaining recurring/scheduled events.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Phase 1: The application will be designed to allow users to filter, view, edit, and save changes to a mocked data set.  The application will be built using React and will be designed to be responsive, intuitive, and easy to use for managing scheduled events.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Develop React Application:
    <ul>
      <li>Create a new React App.</li>
      <li>Implement feature/component to:
        <ul>
          <li>filter and display the data set.</li>
          <li>allow users to edit the data set.</li>
          <li>manage multiple dates per recurring/scheduled event such as scheduled exceptions.</li>
          <li>save changes to the data set and minimize potential loss of data by api errors/failures through use of local storage/retry.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Implement UI/UX with the following considerations:
    <ul>
      <li>Responsive design to ensure the application works well on different screen sizes.</li>
      <li>Styling the application to make it visually appealing.</li>
      <li>Intuitive and easy to use interaction for managing recurring/scheduled events.</li>
      <li>Seamless and streamlined User Experience and business process flow.</li>
    </ul>
  </li>
  <li>Testing:
    <ul>
      <li>Write unit tests for the components using Jest and React Testing Library.</li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation focused on developing a React application that allowed users to interact with a specific data set. The application was designed to be responsive, accessible, and visually appealing. Testing was an important part of the development process to ensure the application worked as expected and allowed for refactoring design changes.</p>]]></content><author><name>Brandon DSouza</name></author><category term="DevOps" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/wa-3d-react_2.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/wa-3d-react_2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">VPS Monitoring and Alerting Utility - Troubleshooting Production VPS</title><link href="https://code-sage.com/blog/devops/2024/04/20/VPS-Monitor-Utility.html" rel="alternate" type="text/html" title="VPS Monitoring and Alerting Utility - Troubleshooting Production VPS" /><published>2024-04-20T12:16:27+00:00</published><updated>2024-04-20T12:16:27+00:00</updated><id>https://code-sage.com/blog/devops/2024/04/20/VPS-Monitor-Utility</id><content type="html" xml:base="https://code-sage.com/blog/devops/2024/04/20/VPS-Monitor-Utility.html"><![CDATA[<p><img src="/blog/public/image/vps_monitor.jpg" alt="Dev Ops" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Facilitate root cause analysis and improve response to a slowing production VPS.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Develop a VPS monitoring and alerting utility to monitor VPS health and send alerts when certain thresholds are exceeded.</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<ol>
  <li>Monitor a VPS and send an email alert if the following is above a specified thresholds.
    <ul>
      <li>Load average</li>
      <li>CPU usage</li>
      <li>Memory usage</li>
      <li>Disk usage</li>
      <li>Number of processes</li>
    </ul>
  </li>
  <li>Alert emails are throttled to one per hour (or specified).
    <ul>
      <li>If an alert condition is still present, another “VPS - Alert” email will be sent after an hour.</li>
      <li>If an alert condition is no longer present, an email will be sent to indicate “VPS - OK”</li>
    </ul>
  </li>
  <li>“VPS Log” with Summary email is sent once a day (or specified).
    <ul>
      <li>mean, median, min and max are calculated/included for each parameter</li>
      <li>monitor log file is removed after sending</li>
    </ul>
  </li>
</ol>

<p>Overall, the technical implementation was centered around effectively monitoring and alerting on the health and performance metrics of the VPS. This aimed to enhance response time and identify the root cause of the production VPS slowdown. After analyzing additional VPS application logs, it was determined that external factors (such as DOS attack) were eliminated and a specific application was identified as the cause. To track and alert on the performance of this application, additional custom alerting and monitoring were implemented. The slowdown issue was resolved after identifying and resolving the application specific issue.</p>]]></content><author><name>Brandon DSouza</name></author><category term="DevOps" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/vps_monitor.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/vps_monitor.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">NET Core Application Modernization - Dependency Upgrade (3.1 to 8.0)</title><link href="https://code-sage.com/blog/application-modernization/2024/02/24/NET-Core-App-Modernization.html" rel="alternate" type="text/html" title="NET Core Application Modernization - Dependency Upgrade (3.1 to 8.0)" /><published>2024-02-24T20:16:27+00:00</published><updated>2024-02-24T20:16:27+00:00</updated><id>https://code-sage.com/blog/application-modernization/2024/02/24/NET-Core-App-Modernization</id><content type="html" xml:base="https://code-sage.com/blog/application-modernization/2024/02/24/NET-Core-App-Modernization.html"><![CDATA[<p><img src="/blog/public/image/ad-puzzle-modernization.jpg" alt="NET Core" class="center-image" /></p>

<hr />

<h2 id="objective">Objective</h2>

<p>Modernize legacy NET Application for maintainability and new feature enhancements.</p>

<h2 id="technical-goalsoverview">Technical Goals/Overview</h2>

<p>Minimal changes to update application components (dependencies, code base, and database) to upgrade to latest NET Core LTS (8.0 from NET Core 3.1).</p>

<h2 id="summary-technical-implementation">Summary: Technical Implementation</h2>

<p>1) Update dependencies (net core 3.1 to 8.0).  This includes dependency changes to:</p>
<ul>
  <li>.csproj (dotnet upgrade tool)</li>
  <li>global.json</li>
  <li>Dockerfile</li>
</ul>

<p>2) Update database version (MySQL 5.7 to 8.0)</p>
<ul>
  <li>.csproj (update MySQL dependencies)</li>
  <li>code changes to correctly initialize mysql connection</li>
</ul>

<p>3) Troubleshoot and fix build errors and runtime failures</p>
<ul>
  <li>update needed code, environment, and configuration settings for updated versions of MySQL and .NET Core</li>
  <li>(dev env enhancement) support for local development using HTTPS</li>
</ul>

<p>Overall, the technical implementation focused on successfully navigating and trouble shooting issues (build and runtime) encountered to continue development and long term support of NET Core web application.</p>]]></content><author><name>Brandon DSouza</name></author><category term="Application-Modernization" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/ad-puzzle-modernization.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/ad-puzzle-modernization.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">SoapBox: Schedule and prioritize Dependency Maintenance</title><link href="https://code-sage.com/blog/devops/2024/01/27/Soapbox-Schdule-and-Prioritize-Dependency-Mantainance.html" rel="alternate" type="text/html" title="SoapBox: Schedule and prioritize Dependency Maintenance" /><published>2024-01-27T20:16:27+00:00</published><updated>2024-01-27T20:16:27+00:00</updated><id>https://code-sage.com/blog/devops/2024/01/27/Soapbox-Schdule-and-Prioritize-Dependency-Mantainance</id><content type="html" xml:base="https://code-sage.com/blog/devops/2024/01/27/Soapbox-Schdule-and-Prioritize-Dependency-Mantainance.html"><![CDATA[<p><img src="/blog/public/image/sp-machine-belt-gears-above.jpg" alt="Dependency Maintenance" class="center-image" /></p>

<hr />

<p>Regular and proactive dependency maintenance is a must in keeping a software project secure, up-to-date, and well-aligned with evolving requirements and standards.  Updates should be prioritized according to urgency of potential impact to a project.</p>

<h2 id="urgent-dependency-maintenance-to-be-completed-asap">Urgent Dependency Maintenance to be completed ASAP</h2>

<ul>
  <li>Security Vulnerabilities: Addressing security vulnerabilities should always be the highest priority to protect your software from potential threats.</li>
  <li>Bug Fixes: Critical bugs affecting the functionality or stability of your software.</li>
</ul>

<h2 id="typical-dependency-maintenance-based-on-specifics-of-project-priorities">Typical Dependency Maintenance based on specifics of project priorities</h2>

<ul>
  <li>Feature Requirements: updating dependencies to facilitate new project feature requirements.</li>
  <li>Policy or Compliance Changes: If there are changes in organizational policies or industry compliance standards that impact your dependencies, addressing these changes is important for maintaining compliance.</li>
  <li>End-of-Life or Deprecation: Dependencies that have reached their end-of-life or are deprecated should be prioritized to avoid using outdated or unsupported components.</li>
  <li>Typical dependency revisions:  updating dependencies addressing compatibility issues, non-critical bug fixes, performance improvements, ensures that your software continues to work seamlessly and is ready to move forward.</li>
</ul>

<h2 id="lts-dependency-maintenance-based-on-specifics-of-project-priorities">LTS Dependency Maintenance based on specifics of project priorities</h2>

<ul>
  <li>Framework or Language Updates: Addressing updates to the underlying programming language or framework can be important for long-term compatibility</li>
  <li>New Platform Support: If your project needs to be deployed on a new platform, updating dependencies for compatibility with that platform</li>
</ul>

<p>Proactive maintenance of dependencies is a strategic imperative. It not only mitigates risks associated with security and performance but also positions the software for sustained relevance and competitiveness in the dynamic realm of software development. Regularly assessing and updating dependencies should be a fundamental aspect of any software maintenance strategy, ensuring a resilient and forward-looking software ecosystem.</p>]]></content><author><name>Brandon DSouza</name></author><category term="DevOps" /><category term="vscode" /><category term="git" /><summary type="html"><![CDATA[]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://code-sage.com/blog/public/image/sp-machine-belt-gears-above.jpg" /><media:content medium="image" url="https://code-sage.com/blog/public/image/sp-machine-belt-gears-above.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>